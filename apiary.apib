FORMAT: 1A
HOST: http://elbalde.herokuapp.com/api/v1

# el-balde API (v1)

El-balde is an API for bucket list design.
It exposes an API allowing
consumers to create and manage bucket lists.
This API provides endpoints for the following operations.

## Group Authentication

## Login [/auth/login]

### Authenticate a user and generate a token [POST]

Logs a user in.

+ Request (application/json)

    + Body

            {
                "email": "<email>",
                "password": "<password>"
            }

+ Response 200 (application/json)

    + Body

            {
                "auth_token": "<authentication_token>",
                "message": "Login successful."
            }

## Logout [/auth/logout]

### Authenticate a user and invalidate the user's token [GET]

Logs a user out.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body

            {
                "message": "Logout successful."
            }

## Group Users

## User Creation [/users]

### Create a new user [POST]

Create a user.

+ Request (application/json)

    + Body

            {
                "first_name": "<first_name>",
                "last_name": "<last_name>",
                "email": "<email>",
                "password": "<password>",
                "password_confirmation": "<password>"
            }
        
+ Response 201 (application/json)

    + Body

            {
                "id": <id>,
                "name": "<first_name> <last_name>",
                "email": "<email>",
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>"
            }

## Users READ-UPDATE-DELETE Collection [/users/{id}]

### List a single user [GET]

List a single user.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body
    
            {
                "id": <id>,
                "name": "<first_name> <last_name>",
                "email": "<email>",
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>"
            }

### Update a user [PUT]

Update a user.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"
    
    + Body

            {
                "field_name": "<field_value>",
                "password": "<password>"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": <id>,
                "name": "<first_name> <last_name>",
                "email": "<email>",
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>"
            }

### Delete a user [DELETE]

Delete a user.

+ Request (application/json)

    + Headers
    
            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body
    
            {
                "message": "User deleted successfully."
            }

## Group BucketLists

## Bucket lists Creation [/bucketlists]

### Create a new bucket list [POST]

A user may create a bucketlist by making a `POST` request to
the `/bucketlists` path.
The body section of the request constitutes the name of the bucket list to be created.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

    + Body
    
            { 
                "name": "<bucket_list_name>"
            }
            

+ Response 201 (application/json)

    + Body

            {
                "id": <id>,
                "name": "<name>",
                "items": [],
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>",
                "created_by": "<first_name> <last_name>"
            }

### List all bucket lists [GET]

List all bucketlists and their corresponding items 
for the logged in user.

Optional request parameters:

- `page` default is page 1.
- `limit` minimum is 20 and maximum 100.

+ Parameters

    + page (optional, int) - the page to receive
        + Default: 1
    + limit (optional, int) - the number of bucketlists per page result
        + Default: 20

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": <id>,
                    "name": "<name>",
                    "items": [
                                {
                                    "id": <id>,
                                    "name": "<name>",
                                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                                    "done": false
                                }
                             ],
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "created_by": "<first_name> <last_name>"
                },
                {
                    "id": <id>,
                    "name": "<name>",
                    "items": [],
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "created_by": "<first_name> <last_name>"
                },
                {
                    "id": <id>,
                    "name": "<name>",
                    "items": [],
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "created_by": "<first_name> <last_name>"
                }
            ]


## Bucket lists READ-UPDATE-DELETE Collection [/bucketlists/{id}]

### List a single bucket list [GET]

Get single bucket list.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body

            {
                "id": <id>,
                "name": "<name>",
                "items": [
                            {
                                "id": <id>,
                                "name": "<name>",
                                "date_created": "<%Y-%m-%d %l:%M:%S>",
                                "date_modified": "<%Y-%m-%d %l:%M:%S>",
                                "done": false
                            },
                            {
                              "id": <id>,
                              "name": "<name>",
                              "date_created": "<%Y-%m-%d %l:%M:%S>",
                              "date_modified": "<%Y-%m-%d %l:%M:%S>",
                              "done": true
                            },
                         ],
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>",
                "created_by": "<first_name> <last_name>"
            }

### Update a bucket list [PUT]

Update the given bucket list.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

    + Body

            {
                "field_name": "<field_value>"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": <id>,
                "name": "<name>",
                "items": [],
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>",
                "created_by": "<first_name> <last_name>"
            }

### Delete a Bucketlist [DELETE]

Delete this single bucket list.

+ Request (application/json)

    + Headers
  
            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body

            {
                 "message": "Bucket list deleted successfully."
            }

## Bucket list search [/bucketlists]

### Search a bucket list by name [GET]

A search can be made for a bucket list by providing the 
`q = <name>`to the url.
`<name>` is the name of the bucket list you want to search.
The response received constitutes the bucket lists containing the supplied
string in their name.

Optional request parameters:

- `page` default is page 1.
- `limit` minimum is 20 and maximum 100.

+ Parameters

    + q (required, string) - the string to search
    + page (optional, int) - the page to receive
        + Default: 1
    + limit (optional, int) - the number of bucketlists per page result
        + Default: 20

+ Request (application/json)

    + Headers
        
            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": <id>,
                    "name": "<name>",
                    "items": [
                                {
                                  "id": <id>,
                                  "name": "<name>",
                                  "date_created": "<<%Y-%m-%d %l:%M:%S>>",
                                  "date_modified": "<%Y-%m-%d %l:%M:%S>",
                                  "done": false
                                },
                                {
                                  "id": <id>,
                                  "name": "<name>",
                                  "date_created": "<%Y-%m-%d %l:%M:%S>",
                                  "date_modified": "<%Y-%m-%d %l:%M:%S>",
                                  "done": true
                                },
                                {
                                  "id": <id>,
                                  "name": "<name>",
                                  "date_created": "<%Y-%m-%d %l:%M:%S>",
                                  "date_modified": "<%Y-%m-%d %l:%M:%S>",
                                  "done": true
                                }
                             ],
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "created_by": "<first_name> <last_name>"
                },
                {
                    "id": <id>,
                    "name": "<name>",
                    "items": [
                                  {
                                    "id": <id>,
                                    "name": "<name>",
                                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                                    "done": true
                                  }
                    ],
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "created_by": "<first_name> <last_name>"
                },
                {
                  "id": <id>,
                  "name": "<name>",
                  "items": [],
                  "date_created": "<%Y-%m-%d %l:%M:%S>",
                  "date_modified": "<%Y-%m-%d %l:%M:%S>",
                  "created_by": "<first_name> <last_name>"
                }
            ]

## Group BucketListItems

## Bucket list items Creation [/bucketlists/{bucket_list_id}/items/]

### Create an item in bucket list. [POST]

Create a new item in the given bucket list.

+ Request (application/json)

    + Headers
 
            Authorization: "<authentication_token>"

    + Body

            {
                "name": "<name>"
            }

+ Response 201 (application/json)

    + Body

            {
                "id": <id>,
                "name": "<name>",
                "date_created": "2016-11-28 12:14:36",
                "date_modified": "2016-11-28 12:14:36",
                "done": false
            }

### List all bucket lists items [GET]

List all the created items in a bucket list.

Optional query parameters:

- `page` default is page 1.
- `limit` minimum is 20 and maximum 100.

+ Parameters

    + page (optional, int) - the page to receive
        + Default: 1
    + limit (optional, int) - the number of bucketlists per page result
        + Default: 20

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body
    
            [
                {
                    "id": <id>,
                    "name": "<name>",
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "done": false
                },
                {
                    "id": <id>,
                    "name": "<name>",
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "done": false
                },
                {
                    "id": <id>,
                    "name": "<name>",
                    "date_created": "<%Y-%m-%d %l:%M:%S>",
                    "date_modified": "<%Y-%m-%d %l:%M:%S>",
                    "done": false
                }
            ]

## Bucket list item READ-UPDATE-DELETE Collection [/bucketlists/{bucket_list_id}/items/{id}]

### List a single bucket list item [GET]

Get a single item in a bucket list.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body
    
            {
                "id": <id>,
                "name": "<name>",
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>",
                "done": false
            }

### Update a bucket list item [PUT]

Update a bucket list item.

+ Request (application/json)

    + Headers

            Authorization: "<authentication_token>"

    + Body

            {
                "done": true,
                "name": "<new name>"
            }

+ Response 200 (application/json)

    + Body

            {
                "id": <id>,
                "name": "<name>",
                "date_created": "<%Y-%m-%d %l:%M:%S>",
                "date_modified": "<%Y-%m-%d %l:%M:%S>",
                "done": true
            }


### Delete a Bucketlist Item [DELETE]

Delete an item in a bucket list.

+ Request (application/json)

    + Headers
        
            Authorization: "<authentication_token>"

+ Response 200 (application/json)

    + Body

            {
                "message": "Bucket list item deleted successfully."
            }